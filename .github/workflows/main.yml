name: Build and deploy server # The name of the workflow

on:
  release:
    types: 
      - published
  workflow_dispatch:
jobs:
  build:
    name: 'Build & Publish'
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
        
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v2
        
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}
          
      - name: "Build&Deploy strapi"
        uses: docker/build-push-action@v4
        with:
          context: ./strapi
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/prod-strapi:latest
            
      - name: "Build&Deploy client"
        uses: docker/build-push-action@v4
        with:
          context: ./client
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/prod-client:latest

      - name: "Run deploy on server"
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S docker-compose down
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S docker login ghcr.io --username ${{ github.repository_owner }} --password ${{ secrets.REGISTRY_TOKEN }}
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S docker-compose down
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S docker rm -f $(docker ps -a -q)
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S docker volume rm $(docker volume ls -q)
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S docker-compose -f docker-compose.prod-ci.yml -p prod pull
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S docker-compose -f docker-compose.prod-ci.yml -p prod up -d

name: Deploy # The name of the workflow

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  client-build:
    runs-on: ubuntu-latest # Setup an environment to run the action
    steps:
      - uses: actions/checkout@v2 # This actions copy the repository on the environment
      - name: Rename the heroku_python.yml
        run: |
          mv heroku-client.yml heroku.yml
      - uses: akhileshns/heroku-deploy@v3.12.12 # This action deploys the content on Heroku
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}} #The Heroku api key we stored on our repo secret
          heroku_app_name: "fix-lab" #The name of your heroku app - Must be unique in Heroku
          heroku_email: "dima.komlyk@gmail.com" #Your heroku yuser name
          usedocker: true

  strapi-build:
    runs-on: ubuntu-latest # Setup an environment to run the action
    steps:
      - uses: actions/checkout@v2 # This actions copy the repository on the environment
      - name: Rename the heroku_python.yml
        run: |
          mv heroku-strapi.yml heroku.yml
      - uses: akhileshns/heroku-deploy@v3.12.12 # This action deploys the content on Heroku
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}} #The Heroku api key we stored on our repo secret
          heroku_app_name: "fix-lab" #The name of your heroku app - Must be unique in Heroku
          heroku_email: "dima.komlyk@gmail.com" #Your heroku yuser name
          usedocker: true
# setup:
#   addons:
#     - plan: heroku-postgresql
#       as: DATABASE
# build:
#   docker:
#     web: web/Dockerfile
#   config:
#     NODE_ENV: production
#     DATABASE_URL: $DATABASE_URL
#     WEBSITE_URL: $WEBSITE_URL
#     PORT: $PORT
# run:
#   web: npm run start
